/* Q API - inspection/floating point.h
	      __	   __
  _______ ___/ /______ ___/ /__
 / __/ -_) _  / __/ _ \ _  / -_)
/_/  \__/\_,_/\__/\___/_,_/\__/
Copyright © 2006-2014 Manuel Sainz de Baranda y Goñi.
Released under the terms of the GNU General Public License v3. */

#ifndef __Q_inspection_floating_point_H__
#define __Q_inspection_floating_point_H__

#include <Q/inspection/CPU.h>

#if	Q_CPU_ARCHITECTURE == Q_CPU_ARCHITECTURE_X86_32		|| \
	Q_CPU_ARCHITECTURE == Q_CPU_ARCHITECTURE_X86_64		|| \
	Q_CPU_ARCHITECTURE == Q_CPU_ARCHITECTURE_POWER_PC_32	|| \
	Q_CPU_ARCHITECTURE == Q_CPU_ARCHITECTURE_POWER_PC_64

#	define Q_FLOATING_POINT_FILE_FLOAT    IEEE 754
#	define Q_FLOATING_POINT_FILE_DOUBLE   IEEE 754
#	define Q_FLOATING_POINT_FILE_LDOUBLE  IEEE 754
#	define Q_FLOATING_POINT_TOKEN_FLOAT   IEEE_754_BINARY32
#	define Q_FLOATING_POINT_TOKEN_DOUBLE  IEEE_754_BINARY64
#	define Q_FLOATING_POINT_TOKEN_LDOUBLE IEEE_754_BINARY128

#endif

#define Q_FLOATING_POINT_HEADER_FLOAT	<Q/formats/floating point/Q_FLOATING_POINT_FILE_FLOAT.h>
#define Q_FLOATING_POINT_HEADER_DOUBLE	<Q/formats/floating point/Q_FLOATING_POINT_FILE_DOUBLE.h>
#define Q_FLOATING_POINT_HEADER_LDOUBLE <Q/formats/floating point/Q_FLOATING_POINT_FILE_LDOUBLE.h>

#define Q_INSPECTING

#include Q_FLOATING_POINT_HEADER_FLOAT
#include Q_FLOATING_POINT_HEADER_DOUBLE
#include Q_FLOATING_POINT_HEADER_LDOUBLE

#undef Q_INSPECTING

#include <Q/keys/floating point.h>

#define Q_FLOATING_POINT_TOKEN(		     TYPE) Q_JOIN_2(Q_FLOATING_POINT_TOKEN_, TYPE)
#define Q_FLOATING_POINT_FORMAT(	     TYPE) Q_JOIN_2(Q_VALUE_FORMAT_, Q_FLOATING_POINT_TOKEN(TYPE))
#define Q_FLOATING_POINT_BITS(		     TYPE) Q_JOIN_3(Q_, Q_FLOATING_POINT_TOKEN(TYPE), _BITS)
#define Q_FLOATING_POINT_MINIMUM(	     TYPE) Q_JOIN_3(Q_, Q_FLOATING_POINT_TOKEN(TYPE), _MINIMUM)
#define Q_FLOATING_POINT_MAXIMUM(	     TYPE) Q_JOIN_3(Q_, Q_FLOATING_POINT_TOKEN(TYPE), _MAXIMUM)
#define Q_FLOATING_POINT_EPSILON(	     TYPE) Q_JOIN_3(Q_, Q_FLOATING_POINT_TOKEN(TYPE), _EPSILON)
#define Q_FLOATING_POINT_DECIMAL_DIGITS(     TYPE) Q_JOIN_3(Q_, Q_FLOATING_POINT_TOKEN(TYPE), _DECIMAL_DIGITS)
#define Q_FLOATING_POINT_MANTISSA_DIGITS(    TYPE) Q_JOIN_3(Q_, Q_FLOATING_POINT_TOKEN(TYPE), _MANTISSA_DIGITS)
#define Q_FLOATING_POINT_EXPONENT_MINIMUM(   TYPE) Q_JOIN_3(Q_, Q_FLOATING_POINT_TOKEN(TYPE), _EXPONENT_MINIMUM)
#define Q_FLOATING_POINT_EXPONENT_MAXIMUM(   TYPE) Q_JOIN_3(Q_, Q_FLOATING_POINT_TOKEN(TYPE), _EXPONENT_MAXIMUM)
#define Q_FLOATING_POINT_EXPONENT_10_MINIMUM(TYPE) Q_JOIN_3(Q_, Q_FLOATING_POINT_TOKEN(TYPE), _EXPONENT_10_MINIMUM)
#define Q_FLOATING_POINT_EXPONENT_10_MAXIMUM(TYPE) Q_JOIN_3(Q_, Q_FLOATING_POINT_TOKEN(TYPE), _EXPONENT_10_MAXIMUM)

#endif /* __Q_inspection_floating_point_H__ */
