/* Z Kit C API - inspection/C++/completion.h
 _____  _______________
/_   /_/  -_/_   _/  _ |
 /____/\___/ /__//___/_| Kit
Copyright (C) 2006-2018 Manuel Sainz de Baranda y Go√±i.
Released under the terms of the GNU Lesser General Public License v3. */

/* MARK: - C++85 */
/* MARK: - C++89 */
/* MARK: - C++98 */

#ifndef Z_CPP_HAS_SFINAE
#	define Z_CPP_HAS_SFINAE FALSE
#endif

#ifndef Z_CPP_HAS_TYPE_BOOLEAN
#	define Z_CPP_HAS_TYPE_BOOLEAN FALSE
#endif

/* MARK: - C++03 */

/* MARK: - C++11 */

#ifndef Z_CPP_HAS_C99_PREPROCESSOR
#	define Z_CPP_HAS_C99_PREPROCESSOR FALSE
#endif

#ifndef Z_CPP_HAS_CONDITIONALLY_SUPPORTED_BEHAVIOR
#	define Z_CPP_HAS_CONDITIONALLY_SUPPORTED_BEHAVIOR FALSE
#endif

#ifndef Z_CPP_HAS_DEFAULT_TEMPLATE_ARGUMENTS_FOR_FUNCTION_TEMPLATE
#	define Z_CPP_HAS_DEFAULT_TEMPLATE_ARGUMENTS_FOR_FUNCTION_TEMPLATE FALSE
#endif

#ifndef Z_CPP_HAS_DEFAULTED_FUNCTION
#	define Z_CPP_HAS_DEFAULTED_FUNCTION FALSE
#endif

#ifndef Z_CPP_HAS_DELEGATING_CONSTRUCTORS
#	define Z_CPP_HAS_DELEGATING_CONSTRUCTORS FALSE
#endif

#ifndef Z_CPP_HAS_DELETED_FUNCTION
#	define Z_CPP_HAS_DELETED_FUNCTION FALSE
#endif

#ifndef Z_CPP_HAS_EXPRESSION_SFINAE
#	define Z_CPP_HAS_EXPRESSION_SFINAE FALSE
#endif

#ifndef Z_CPP_HAS_EXTENDED_FRIEND_DECLARATION
#	define Z_CPP_HAS_EXTENDED_FRIEND_DECLARATION FALSE
#endif

#ifndef Z_CPP_HAS_EXTERN_TEMPLATE
#	define Z_CPP_HAS_EXTERN_TEMPLATE FALSE
#endif

#ifndef Z_CPP_HAS_FORWARD_DECLARATION_OF_ENUMERATION
#	define Z_CPP_HAS_FORWARD_DECLARATION_OF_ENUMERATION FALSE
#endif

#ifndef Z_CPP_HAS_INHERITING_CONSTRUCTORS
#	define Z_CPP_HAS_INHERITING_CONSTRUCTORS FALSE
#endif

#ifndef Z_CPP_HAS_INITIALIZATION_OF_CLASS_OBJECT_BY_RVALUE
#	define Z_CPP_HAS_INITIALIZATION_OF_CLASS_OBJECT_BY_RVALUE FALSE
#endif

#ifndef Z_CPP_HAS_INITIALIZER_LIST
#	define Z_CPP_HAS_INITIALIZER_LIST FALSE
#endif

#ifndef Z_CPP_HAS_INLINE_NAMESPACE
#	define Z_CPP_HAS_INLINE_NAMESPACE FALSE
#endif

#ifndef Z_CPP_HAS_LAMBDA
#	define Z_CPP_HAS_LAMBDA FALSE
#endif

#ifndef Z_CPP_HAS_MULTI_DECLARATOR_AUTO
#	define Z_CPP_HAS_MULTI_DECLARATOR_AUTO FALSE
#endif

#ifndef Z_CPP_HAS_NON_STATIC_DATA_MEMBER_INITIALIZER
#	define Z_CPP_HAS_NON_STATIC_DATA_MEMBER_INITIALIZER FALSE
#endif

#ifndef Z_CPP_HAS_RANGE_BASED_FOR
#	define Z_CPP_HAS_RANGE_BASED_FOR FALSE
#endif

#ifndef Z_CPP_HAS_REFERENCE_QUALIFIED_NON_STATIC_MEMBER_FUNCTION
#	define Z_CPP_HAS_REFERENCE_QUALIFIED_NON_STATIC_MEMBER_FUNCTION FALSE
#endif

#ifndef Z_CPP_HAS_REMOVAL_OF_AUTO_AS_A_STORAGE_CLASS
#	define Z_CPP_HAS_REMOVAL_OF_AUTO_AS_A_STORAGE_CLASS FALSE
#endif

#ifndef Z_CPP_HAS_RIGHT_ANGLE_BRACKETS
#	define Z_CPP_HAS_RIGHT_ANGLE_BRACKETS FALSE
#endif

#ifndef Z_CPP_HAS_RVALUE_REFERENCE
#	define Z_CPP_HAS_RVALUE_REFERENCE FALSE
#endif

#ifndef Z_CPP_HAS_STANDARDIZED_ATTRIBUTE_SYNTAX
#	define Z_CPP_HAS_STANDARDIZED_ATTRIBUTE_SYNTAX FALSE
#endif

#ifndef Z_CPP_HAS_STATIC_ASSERTION
#	define Z_CPP_HAS_STATIC_ASSERTION FALSE
#endif

#ifndef Z_CPP_HAS_STATIC_CONSTANT_DATA_MEMBER_INITIALIZER
#	define Z_CPP_HAS_STATIC_CONSTANT_DATA_MEMBER_INITIALIZER FALSE
#endif

#ifndef Z_CPP_HAS_STRONGLY_TYPED_ENUMERATION
#	define Z_CPP_HAS_STRONGLY_TYPED_ENUMERATION FALSE
#endif

#ifndef Z_CPP_HAS_TEMPLATE_ALIAS
#	define Z_CPP_HAS_TEMPLATE_ALIAS FALSE
#endif

#ifndef Z_CPP_HAS_TRAILING_RETURN_TYPE
#	define Z_CPP_HAS_TRAILING_RETURN_TYPE FALSE
#endif

#ifndef Z_CPP_HAS_UNRESTRICTED_UNION
#	define Z_CPP_HAS_UNRESTRICTED_UNION FALSE
#endif

#ifndef Z_CPP_HAS_VARIADIC_TEMPLATE
#	define Z_CPP_HAS_VARIADIC_TEMPLATE FALSE
#endif

#ifndef Z_CPP_HAS_VARIADIC_TEMPLATE_EXTENDED_PARAMETERS
#	define Z_CPP_HAS_VARIADIC_TEMPLATE_EXTENDED_PARAMETERS FALSE
#endif

#ifndef Z_CPP_HAS_ATTRIBUTE_CARRIES_DEPENDENCY
#	define Z_CPP_HAS_ATTRIBUTE_CARRIES_DEPENDENCY FALSE
#endif

#ifndef Z_CPP_HAS_ATTRIBUTE_NO_RETURN
#	define Z_CPP_HAS_ATTRIBUTE_NO_RETURN FALSE
#endif

#ifndef Z_CPP_HAS_LITERAL_NULL_POINTER
#	define Z_CPP_HAS_LITERAL_NULL_POINTER FALSE
#endif

#ifndef Z_CPP_HAS_LITERAL_RAW_STRING
#	define Z_CPP_HAS_LITERAL_RAW_STRING FALSE
#endif

#ifndef Z_CPP_HAS_LITERAL_UNICODE_STRING
#	define Z_CPP_HAS_LITERAL_UNICODE_STRING FALSE
#endif

#ifndef Z_CPP_HAS_MAGIC_CONSTANT_FUNCTION_NAME
#	define Z_CPP_HAS_MAGIC_CONSTANT_FUNCTION_NAME FALSE
#endif

#ifndef Z_CPP_HAS_OPERATOR_ALIGN_OF
#	define Z_CPP_HAS_OPERATOR_ALIGN_OF FALSE
#endif

#ifndef Z_CPP_HAS_OPERATOR_NO_EXCEPTION
#	define Z_CPP_HAS_OPERATOR_NO_EXCEPTION FALSE
#endif

#ifndef Z_CPP_HAS_SPECIFIER_ALIGN_AS
#	define Z_CPP_HAS_SPECIFIER_ALIGN_AS FALSE
#endif

#ifndef Z_CPP_HAS_SPECIFIER_AUTO
#	define Z_CPP_HAS_SPECIFIER_AUTO FALSE
#endif

#ifndef Z_CPP_HAS_SPECIFIER_CONSTANT_EXPRESSION
#	define Z_CPP_HAS_SPECIFIER_CONSTANT_EXPRESSION FALSE
#endif

#ifndef Z_CPP_HAS_SPECIFIER_DECLARED_TYPE
#	define Z_CPP_HAS_SPECIFIER_DECLARED_TYPE FALSE
#endif

#ifndef Z_CPP_HAS_SPECIFIER_DECLARED_TYPE_INCOMPLETE_RETURN
#	define Z_CPP_HAS_SPECIFIER_DECLARED_TYPE_INCOMPLETE_RETURN FALSE
#endif

#ifndef Z_CPP_HAS_SPECIFIER_EXPLICIT
#	define Z_CPP_HAS_SPECIFIER_EXPLICIT FALSE
#endif

#ifndef Z_CPP_HAS_SPECIFIER_NO_EXCEPTION
#	define Z_CPP_HAS_SPECIFIER_NO_EXCEPTION FALSE
#endif

#ifndef Z_CPP_HAS_STORATE_CLASS_THREAD_LOCAL
#	define Z_CPP_HAS_STORATE_CLASS_THREAD_LOCAL FALSE
#endif

#ifndef Z_CPP_HAS_TYPE_CHAR16
#	define Z_CPP_HAS_TYPE_CHAR16 FALSE
#endif

#ifndef Z_CPP_HAS_TYPE_CHAR32
#	define Z_CPP_HAS_TYPE_CHAR32 FALSE
#endif

#ifndef Z_CPP_HAS_TYPE_ULLONG
#	define Z_CPP_HAS_TYPE_ULLONG FALSE
#endif

#ifndef Z_CPP_HAS_TYPE_SLLONG
#	define Z_CPP_HAS_TYPE_SLLONG FALSE
#endif

/* MARK: C++14 */

#ifndef Z_CPP_HAS_GENERIC_LAMBDA
#	define Z_CPP_HAS_GENERIC_LAMBDA FALSE
#endif

#ifndef Z_CPP_HAS_RELAXED_CONSTANT_EXPRESSION_FUNCTION
#	define Z_CPP_HAS_RELAXED_CONSTANT_EXPRESSION_FUNCTION FALSE
#endif

#ifndef Z_CPP_HAS_RETURN_TYPE_DEDUCTION_FOR_NORMAL_FUNCTION
#	define Z_CPP_HAS_RETURN_TYPE_DEDUCTION_FOR_NORMAL_FUNCTION FALSE
#endif

#ifndef Z_CPP_HAS_SIZED_DEALLOCATION
#	define Z_CPP_HAS_SIZED_DEALLOCATION FALSE
#endif

#ifndef Z_CPP_HAS_VARIABLE_TEMPLATE
#	define Z_CPP_HAS_VARIABLE_TEMPLATE FALSE
#endif

#ifndef Z_CPP_HAS_ATTRIBUTE_DEPRECATED
#	define Z_CPP_HAS_ATTRIBUTE_DEPRECATED FALSE
#endif

#ifndef Z_CPP_HAS_LITERAL_BINARY
#	define Z_CPP_HAS_LITERAL_BINARY FALSE
#endif

/* MARK: C++17 */
/* MARK: C++20 */

/* inspection/C++/completion.h EOF */
