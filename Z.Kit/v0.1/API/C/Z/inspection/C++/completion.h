/* Z Kit C API - inspection/C++/completion.h
 _____  _______________
/_   /_/  -_/_   _/  _ |
 /____/\___/ /__//___/_| Kit
Copyright © 2006-2017 Manuel Sainz de Baranda y Goñi.
Released under the terms of the GNU Lesser General Public License v3. */

/* MARK: - C++85 */
/* MARK: - C++89 */
/* MARK: - C++98 */
/* MARK: - C++03 */

/* MARK: - C++11 */

#ifndef Z_CPP_HAS_C99_PREPROCESSOR
#	define Z_CPP_HAS_C99_PREPROCESSOR FALSE
#endif

#ifndef Z_CPP_HAS_EXPLICIT_CONVERSION
#	define Z_CPP_HAS_EXPLICIT_CONVERSION FALSE
#endif

#ifndef Z_CPP_HAS_EXPRESSION_SFINAE
#	define Z_CPP_HAS_EXPRESSION_SFINAE FALSE
#endif

#ifndef Z_CPP_HAS_INITIALIZER_LIST
#	define Z_CPP_HAS_INITIALIZER_LIST FALSE
#endif

#ifndef Z_CPP_HAS_NON_STATIC_DATA_MEMBER_INITIALIZER
#	define Z_CPP_HAS_NON_STATIC_DATA_MEMBER_INITIALIZER FALSE
#endif

#ifndef Z_CPP_HAS_LAMBDA
#	define Z_CPP_HAS_LAMBDA FALSE
#endif

#ifndef Z_CPP_HAS_RANGE_BASED_FOR
#	define Z_CPP_HAS_RANGE_BASED_FOR FALSE
#endif

#ifndef Z_CPP_HAS_REFERENCE_QUALIFIED_NON_STATIC_MEMBER_FUNCTION
#	define Z_CPP_HAS_REFERENCE_QUALIFIED_NON_STATIC_MEMBER_FUNCTION FALSE
#endif

#ifndef Z_CPP_HAS_RVALUE_REFERENCE
#	define Z_CPP_HAS_RVALUE_REFERENCE FALSE
#endif

#ifndef Z_CPP_HAS_STATIC_CONSTANT_DATA_MEMBER_INITIALIZER
#	define Z_CPP_HAS_STATIC_CONSTANT_DATA_MEMBER_INITIALIZER FALSE
#endif

#ifndef Z_CPP_HAS_STRONGLY_TYPED_ENUMERATION
#	define Z_CPP_HAS_STRONGLY_TYPED_ENUMERATION FALSE
#endif

#ifndef Z_CPP_HAS_TEMPLATE_ALIAS
#	define Z_CPP_HAS_TEMPLATE_ALIAS FALSE
#endif

#ifndef Z_CPP_HAS_TRAILING_RETURN_TYPE
#	define Z_CPP_HAS_TRAILING_RETURN_TYPE FALSE
#endif

#ifndef Z_CPP_HAS_UNRESTRICTED_UNION
#	define Z_CPP_HAS_UNRESTRICTED_UNION FALSE
#endif

#ifndef Z_CPP_HAS_VARIADIC_TEMPLATE
#	define Z_CPP_HAS_VARIADIC_TEMPLATE FALSE
#endif

#ifndef Z_CPP_HAS_VARIADIC_TEMPLATE_EXTENDED_PARAMETERS
#	define Z_CPP_HAS_VARIADIC_TEMPLATE_EXTENDED_PARAMETERS FALSE
#endif

#ifndef Z_CPP_HAS_TYPE_ULLONG
#	define Z_CPP_HAS_TYPE_ULLONG FALSE
#endif

#ifndef Z_CPP_HAS_TYPE_LLONG
#	define Z_CPP_HAS_TYPE_LLONG FALSE
#endif

#ifndef Z_CPP_HAS_SPECIFIER_ALIGN_AS
#	define Z_CPP_HAS_SPECIFIER_ALIGN_AS FALSE
#endif

#ifndef Z_CPP_HAS_SPECIFIER_AUTO
#	define Z_CPP_HAS_SPECIFIER_AUTO FALSE
#endif

#ifndef Z_CPP_HAS_SPECIFIER_CONSTANT_EXPRESSION
#	define Z_CPP_HAS_SPECIFIER_CONSTANT_EXPRESSION FALSE
#endif

#ifndef Z_CPP_HAS_SPECIFIER_DECLARED_TYPE
#	define Z_CPP_HAS_SPECIFIER_DECLARED_TYPE FALSE
#endif

#ifndef Z_CPP_HAS_SPECIFIER_DECLARED_TYPE_INCOMPLETE_RETURN
#	define Z_CPP_HAS_SPECIFIER_DECLARED_TYPE_INCOMPLETE_RETURN FALSE
#endif

#ifndef Z_CPP_HAS_SPECIFIER_NO_EXCEPTION
#	define Z_CPP_HAS_SPECIFIER_NO_EXCEPTION FALSE
#endif

#ifndef Z_CPP_HAS_OPERATOR_ALIGN_OF
#	define Z_CPP_HAS_OPERATOR_ALIGN_OF FALSE
#endif

#ifndef Z_CPP_HAS_OPERATOR_NO_EXCEPTION
#	define Z_CPP_HAS_OPERATOR_NO_EXCEPTION FALSE
#endif

#ifndef Z_CPP_HAS_LITERAL_NULL_POINTER
#	define Z_CPP_HAS_LITERAL_NULL_POINTER FALSE
#endif

/* MARK: C++14 */

#ifndef Z_CPP_HAS_BINARY_LITERAL
#	define Z_CPP_HAS_BINARY_LITERAL FALSE
#endif

#ifndef Z_CPP_HAS_RELAXED_CONSTANT_EXPRESSION_FUNCTION
#	define Z_CPP_HAS_RELAXED_CONSTANT_EXPRESSION_FUNCTION FALSE
#endif

/* MARK: C++17 */

/* inspection/C++/completion.h EOF */
